# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: 'Deploy Comsos DB Stored Proc Sample'
trigger: none

pool:
  vmImage: ubuntu-latest

stages:

- stage: Lint
  jobs:
  - job: LintCode
    displayName: Lint code
    steps:
      - script: |
          az bicep build --file deploy/main.bicep
        name: LintBicepCode
        displayName: Run Bicep linter

- stage: Validate
  jobs:
  - job: ValidateBicepCode
    displayName: Validate Bicep code
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        name: RunPreflightValidation
        displayName: Run preflight validation
        inputs:
          connectedServiceName: $(ServiceConnectionName)
          location: $(deploymentDefaultLocation)
          deploymentMode: Validation
          resourceGroupName: $(ResourceGroupName)
          csmFile: deploy/main.bicep
          
- stage: Preview
  jobs:
  - job: PreviewAzureChanges
    displayName: Preview Azure changes
    steps:
      - task: AzureCLI@2
        name: RunWhatIf
        displayName: Run what-if
        inputs:
          azureSubscription: $(ServiceConnectionName)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment group what-if \
              --resource-group $(ResourceGroupName) \
              --template-file deploy/main.bicep

- stage: Deploy
  jobs:
  - deployment: DeployCosmos
    displayName: Deploy Cosmos Resources
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureResourceManagerTemplateDeployment@3
              name: DeployBicepFile
              displayName: Deploy Bicep file
              inputs:
                connectedServiceName: $(ServiceConnectionName)
                deploymentName: $(Build.BuildNumber)
                location: $(deploymentDefaultLocation)
                resourceGroupName: $(ResourceGroupName)
                csmFile: deploy/main.bicep
                deploymentOutputs: deploymentOutputs

            - bash: |
                echo "##vso[task.setvariable variable=accountName;isOutput=true]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.accountName.value')"
                echo "##vso[task.setvariable variable=databaseName;isOutput=true]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.databaseName.value')"
                echo "##vso[task.setvariable variable=containerName;isOutput=true]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.containerName.value')"
              name: SaveDeploymentOutputs
              displayName: Save deployment outputs into variables
              env:
                DEPLOYMENT_OUTPUTS: $(deploymentOutputs)

- stage: Deploy_Stored_Proc
  jobs:
    - job: DeployStoredProc
      displayName: Deploy Stored Proc
      variables:
        accountName: $[ stageDependencies.Deploy.DeployCosmos.outputs['DeployCosmos.SaveDeploymentOutputs.accountName'] ]
        databaseName: $[ stageDependencies.Deploy.DeployCosmos.outputs['DeployCosmos.SaveDeploymentOutputs.databaseName'] ]
        containerName: $[ stageDependencies.Deploy.DeployCosmos.outputs['DeployCosmos.SaveDeploymentOutputs.containerName'] ]
      steps:
        - task: AzurePowerShell@5
          name: DeployAzPowershell
          displayName: 'Deploy Stored Procedure to $(accountName)'
          inputs:
            azureSubscription: $(ServiceConnectionName)
            azurePowerShellVersion: LatestVersion
            ScriptType: 'InlineScript'
            Inline: |
              $body = Get-Content ./src/sayHello.js
              $spBody = ConvertFrom-Json $body
              New-AzCosmosDBSqlStoredProcedure -ResourceGroupName $(ResourceGroupName) -AccountName $(accountName) -DatabaseName $(databaseName) -ContainerName $(containerName) -Name sayHello -Body $spBody
